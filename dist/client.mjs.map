{"version":3,"sources":["../src/client/client.ts"],"sourcesContent":["//hmr客户端的具体实现\r\nconsole.log(\"[xp vite] connecting\");\r\n\r\n//创建websocket客户端实例\r\n//这里的HMR__PORT在插件中会被替换为真实端口\r\nconst socket = new WebSocket(`ws://localhost:__HMR_PORT__`, \"vite-hmr\");\r\n\r\n//接收服务端的更新信息\r\nsocket.addEventListener(\"message\", async ({ data }) => {\r\n  handleMessage(JSON.parse(data)).catch(console.error);\r\n});\r\n\r\nasync function handleMessage(payload: any) {\r\n  switch (payload.type) {\r\n    case \"connected\":\r\n      console.log(`[vite] connected`);\r\n      //心跳检测\r\n      setInterval(() => socket.send(\"ping\"), 1000);\r\n      break;\r\n\r\n    case \"update\":\r\n      payload.updates.forEach((update: Update) => {\r\n        if (update.type === \"js-update\") {\r\n          //......\r\n        }\r\n      });\r\n      break;\r\n  }\r\n}\r\n"],"mappings":";AACA,QAAQ,IAAI,sBAAsB;AAIlC,IAAM,SAAS,IAAI,UAAU,+BAA+B,UAAU;AAGtE,OAAO,iBAAiB,WAAW,OAAO,EAAE,KAAK,MAAM;AACrD,gBAAc,KAAK,MAAM,IAAI,CAAC,EAAE,MAAM,QAAQ,KAAK;AACrD,CAAC;AAED,eAAe,cAAc,SAAc;AACzC,UAAQ,QAAQ,MAAM;AAAA,IACpB,KAAK;AACH,cAAQ,IAAI,kBAAkB;AAE9B,kBAAY,MAAM,OAAO,KAAK,MAAM,GAAG,GAAI;AAC3C;AAAA,IAEF,KAAK;AACH,cAAQ,QAAQ,QAAQ,CAAC,WAAmB;AAC1C,YAAI,OAAO,SAAS,aAAa;AAAA,QAEjC;AAAA,MACF,CAAC;AACD;AAAA,EACJ;AACF;","names":[]}